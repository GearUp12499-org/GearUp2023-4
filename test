#!/usr/bin/env bash
TEMPF=$(mktemp -d)

find_relevant_commits() {
    LOOK_FROM=$1
    PATCHFILE=$2
    # remote HEAD, patch file...
    RETURN_TO=$(git rev-parse --abbrev-ref HEAD)
    if [ "$RETURN_TO" = "HEAD" ]; then
        RETURN_TO=$(git rev-parse HEAD)  # detached HEAD
    fi
    # first, create a commit to backup...
    git add .
    STASHED=1
    if git stash push | grep 'No local changes' >/dev/null 2>&1; then
        STASHED=0
    fi
    
    recover() {
        if ! [ $# -eq 0 ]; then
            echo "$1" 1>&2
        fi
        # try to get back the user's work
        git checkout "$RETURN_TO" --force --quiet
        if [ $STASHED -eq 1 ]; then
            git stash pop --quiet
        fi
    }
    
    # first, create a dummy commit that applies the patch...
    git checkout "$LOOK_FROM" --quiet || {
        recover "catastrophic failure: can't checkout $LOOK_FROM"
        exit 1
    }
    git apply "$PATCHFILE" --quiet || {
        recover "catastrophic failure: can't apply patch"
        exit 1
    }
    
    git add .
    git commit --quiet -am "gitftc: dummy commit"
    DUMMY_COMMIT=$(git rev-parse HEAD)
    DUMMY_DIFF=$(mktemp)
    git diff "$LOOK_FROM...$DUMMY_COMMIT" > "$DUMMY_DIFF"
    git checkout --quiet "$LOOK_FROM" || {
        recover "catastrophic failure: can't checkout $LOOK_FROM"
        exit 1
    }
    
    POSSIBLE_FUTURES=$(git rev-list --all --not "$LOOK_FROM"^@ --children | grep "$LOOK_FROM" | sed -E "s/^$LOOK_FROM //")
    
    MATCHED=0
    for FUTURE in $POSSIBLE_FUTURES; do
        if diff <(git diff "$LOOK_FROM" "$FUTURE") "$DUMMY_DIFF" >/dev/null; then
            if [ "$MATCHED" -eq 1 ]; then
                printf " "
            fi
            printf "%s" "$FUTURE"
            MATCHED=1
        fi
    done
    printf "\n"
    
    # destroy the dummy commit
    git checkout --quiet --force "$DUMMY_COMMIT"
    git reset --quiet --hard "$LOOK_FROM"
    
    # clean up
    recover
    rm -f "$DUMMY_DIFF"
    
    [ "$MATCHED" -eq 1 ] && return 0 || return 1
}

trap "rm -rf '$TEMPF' && printf 'Cleanup successful\n'" EXIT

find_relevant_commits 315cf028db595c6f115c46e1377d807b120802b1 "../0001-abcde.patch"

